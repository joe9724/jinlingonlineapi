// Code generated by go-swagger; DO NOT EDIT.

package activity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrActivitySponsorsListHandlerFunc turns a function with the right signature into a activity sponsors list handler
type NrActivitySponsorsListHandlerFunc func(NrActivitySponsorsListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrActivitySponsorsListHandlerFunc) Handle(params NrActivitySponsorsListParams) middleware.Responder {
	return fn(params)
}

// NrActivitySponsorsListHandler interface for that can handle valid activity sponsors list params
type NrActivitySponsorsListHandler interface {
	Handle(NrActivitySponsorsListParams) middleware.Responder
}

// NewNrActivitySponsorsList creates a new http.Handler for the activity sponsors list operation
func NewNrActivitySponsorsList(ctx *middleware.Context, handler NrActivitySponsorsListHandler) *NrActivitySponsorsList {
	return &NrActivitySponsorsList{Context: ctx, Handler: handler}
}

/*NrActivitySponsorsList swagger:route GET /activity/sponsors/list Activity activitySponsorsList

赞助商列表

赞助商列表

*/
type NrActivitySponsorsList struct {
	Context *middleware.Context
	Handler NrActivitySponsorsListHandler
}

func (o *NrActivitySponsorsList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrActivitySponsorsListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
